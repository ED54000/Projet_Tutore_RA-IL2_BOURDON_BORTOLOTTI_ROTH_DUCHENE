@startuml

class ActiveDefense {
  - target: Ennemy
}

class Archer
class Berserker
class Bomb
class Canon
class Defense
class Druide

class Ennemy {
  - isArrived: boolean
  - survivalTime: long
  - killerType: String
  - distanceStartToArrival: int
  - isHeal: boolean
  - speed: double
  - behaviorString: String
  - listBehaviors: List<Behavior>
  - distanceToArrival: int
  <color:green>- spriteHeal: Image</color>
  - timeSpawn: int 
  - positionReel: Vector2D
  - healthBase: double
  - velocity: Vector2D
  + healDamage(Ennemy, double, double): void
  + calculerChemin(char[][], Vector2D): ArrayList<Vector2D>
  + update(): void

}
class Entity {
  - lastAttackCount: long
  - attackSpeed: double
  # position: Vector2D
  - type: String
  - isDead: boolean
  # health: double
  - isHit: boolean
  - range: double
  - damages: double
  - sprite: Image
  - name: String
  <color:green>- spriteHit: Image</color>
  + takeDamage(double): void
  + attack(Entity, double): void
  + isInRange(Entity): boolean
}
class Giant
class Ninja
class PassiveDefense {
  - attacked: boolean
}


Entity ^--  Ennemy
Entity ^--  Defense
Defense ^--  ActiveDefense
Ennemy "target\n1" <--* "1" ActiveDefense
ActiveDefense ^-- Archer
Ennemy ^--  Berserker
PassiveDefense ^-- Bomb
ActiveDefense ^-- Canon
Ennemy ^-- Druide
Ennemy ^-- Giant
Ennemy ^-- Ninja
Defense ^--  PassiveDefense
@enduml
