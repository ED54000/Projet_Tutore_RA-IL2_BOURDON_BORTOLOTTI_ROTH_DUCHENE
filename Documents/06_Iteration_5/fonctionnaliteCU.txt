Tristan :
	- Evolution logs
	- Simulation 
	- Evolution par groupes
	- Génération de graphiques
	- Résolution de bugs

Marin : 
	- Amélioration des formules de score pour l'évolution
	- Modification de l'évolution : on reproduit les ennemis enfants sur les stats de naissance des parents plutôt que sur les stats de fin de manche.
	- Résolution de bugs
	- Simulation
	- Evolution pour un agent seul


Florian : 
	- Modification de la vitesse du jeu 
	- Ajout d'un arrival behavior
	- Résolutions de bugs

Eloi : 
	- Ajout de la sélection d'un labyrinthe non répertorié 
	- Ajout d'animation lors d'une touche ou d'un soin
	- Résolution de bugs
	- Ajout d'un arrival behavior


À la fin de cette itération, nous pouvons : 

Lancer une partie en choisissant son labyrinthe, le nombre d'ennemis, le nombre de manches, le nombre d'ennemies qui doivent passer pour gagner 
et si A* est utilisé ou non.
Observer ensuite le déroulement d'une partie avec des ennemis se déplaçant en fonction de leur comportement (si A* est utilisé) et se faisant attaquer 
par les défenses dans un labyrinthe bien modélisé à l'aide de sprites. Les ennemis peuvent également attaquer les défenses afin de les détruire. 
Lorsqu'une défense est détruite, si A* est utilisé, le chemin est recalculé pour chaque agent et ils s'adaptent donc aux changements de l'environnement 
au cours d'une manche. 
Voir le déroulement de la manche dans les logs (les pv de chaque entité en temps réel, quel ennemi/défense meurt quand, quel ennemi arrive à la fin). 
Faire évoluer les groupes d'ennemies à chaque manche pour essayer d'optimiser la composition des groupes afin de gagner la partie.
Afficher un graphique représantant l'évolution de la composition du groupe d'ennemi au cours des manches.
